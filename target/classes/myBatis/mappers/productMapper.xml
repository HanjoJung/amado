<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="productMapper">

	<select id="getCount" parameterType="Pager" resultType="java.lang.Integer">
		select count(productCode) from product
		where 
			<if test="brand  != null"> brand in 
				<foreach collection="brand" item="brand" open="(" close=")" separator=",">#{brand}</foreach> AND 
			</if>
			(productCode like '%'||#{search}||'%' or productName like '%'||#{search}||'%') 
			<if test="kind != null and kind != ''">and kind = #{kind} </if>
			and price between #{minPrice} and #{maxPrice}
	</select>
	
	<select id="list" parameterType="Pager" resultType="ProductDTO">
		select * from
			(select ROWNUM R, p.* from
				(select productCode, productName, price, kind, score, good, reg_date from 
					(select * from product 
					where price between #{minPrice} and #{maxPrice}
					and
					<if test="brand  != null and brand  != ''"> brand in 
						<foreach collection="brand" item="brand" open="(" close=")" separator=",">#{brand}</foreach> AND 
					</if>
					(productCode like '%'||#{search}||'%' or productName like '%'||#{search}||'%') 
					<if test="kind != null and kind != ''">and kind = #{kind} </if>
					)
					left join 
					(select avg(score)*20 score, productcode from review group by productcode) 
					using (productCode)
					order by 
					<choose>
						<when test="sort == 'priceAsc'"> price asc, </when>
						<when test="sort == 'priceDesc'"> price desc, </when>
						<when test="sort == 'score'"> score desc NULLS LAST, </when>
					</choose>
					reg_date desc
				) p 
			)
		where R between #{startRow} and #{lastRow}
	</select>
	
	<select id="selectOne" parameterType="java.lang.String" resultType="ProductDTO">
		select * from (select * from product) p
		left join 
		(select avg(score)*20 score, productCode from review group by productCode)r 
		using (productCode)
		where productCode = #{productCode}
	</select>
	
	<insert id="insert" parameterType="ProductDTO">
		insert into product 
		values(#{productCode}, #{productName}, #{price}, #{kind}, #{contents}, 0, 0, 0, #{brand}, 0, sysdate)
	</insert>
	
	<update id="update" parameterType="ProductDTO">
		update product
		<set>
	  		<if test="productName != null and productName != ''"> productName = #{productName},</if> 
	  		<if test="kind != null and kind != ''"> kind = #{kind},</if>
	  		<if test="contents != null and contents != ''"> contents = #{contents},</if>
	  		<if test="brand != null and brand != ''"> brand = #{brand},</if>
	  		<if test="price != null"> price = #{price},</if>
	  		<if test="hit != null"> hit = #{hit},</if>
	  		<if test="sale != null"> sale = #{sale},</if>
	  		<if test="good != null"> good = #{good},</if>
	  		<if test="stock != null"> stock = #{stock}</if> 
		</set>
		where productCode = #{productCode}
	</update>
	
	<delete id="delete">
		delete product 
		where ProductCode = #{ProductCode}
	</delete>
	
	<select id="cart" parameterType="Map" resultType="ProductDTO">
	select productCode, productName, price from product
	where productCode in
	<foreach collection="cart" item="code" open="(" close=")" separator=","> #{code} </foreach>
	</select>
	
</mapper>